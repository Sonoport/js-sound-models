{
    "project": {
        "name": "javascript-sound-models",
        "description": "Sonoport Javascript Sound Models",
        "version": "3.4.7",
        "url": ""
    },
    "files": {
        "src/lib/core/BaseSound.js": {
            "name": "src/lib/core/BaseSound.js",
            "modules": {},
            "classes": {
                "BaseSound": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/core/SPAudioParam.js": {
            "name": "src/lib/core/SPAudioParam.js",
            "modules": {},
            "classes": {
                "SPAudioParam": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "BaseSound": {
            "name": "BaseSound",
            "shortname": "BaseSound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/core/BaseSound.js",
            "line": 1,
            "description": "Base class for all sounds. \nPseudo AudioNode class the encapsulates basic functionality of creating a AudioContext and passing in audio file buffer.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "audioContext",
                    "description": "",
                    "type": "AudioContext"
                }
            ]
        },
        "SPAudioParam": {
            "name": "SPAudioParam",
            "shortname": "SPAudioParam",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/core/SPAudioParam.js",
            "line": 1,
            "description": "Mock AudioParam for external use on Models.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 15,
            "description": "Define one audioContext from Web Audio API's AudioContext class.",
            "itemtype": "property",
            "name": "audioContext",
            "type": "AudioContext",
            "default": "audioContext",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 30,
            "description": "Number of inputs",
            "itemtype": "property",
            "name": "numberOfInputs",
            "type": "Number",
            "default": "1",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 38,
            "description": "Number of outputs",
            "itemtype": "property",
            "name": "numberOfOutputs",
            "type": "Number",
            "default": "1",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 46,
            "description": "Release Gain Node",
            "itemtype": "property",
            "name": "releaseGainNode",
            "type": "GainNode",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 53,
            "description": "Fading time in (seconds)",
            "itemtype": "property",
            "name": "FADE_TIME",
            "constant": "FADE_TIME",
            "default": "0.5 (seconds)",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 61,
            "description": "Padding time in (seconds) after FADE_TIME to allow sound to fade out smoothly.",
            "itemtype": "property",
            "name": "FADE_TIME_PAD",
            "constant": "FADE_TIME_PAD",
            "default": "1 (seconds)",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 69,
            "description": "Checks if the sound is currently playing.",
            "itemtype": "property",
            "name": "isPlaying",
            "type": "boolean",
            "default": "false",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 77,
            "description": "Temp: Create a sine wave oscillator buffer as a temporary source.\nWill be replaced by FileReader and parse in an AudioBuffer",
            "itemtype": "property",
            "name": "bufferSource",
            "type": "Object",
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 91,
            "description": "Connects release Gain Node to an AudioNode or AudioParam.",
            "itemtype": "method",
            "name": "connect",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "output",
                    "description": "Connects to an AudioNode or AudioParam.",
                    "type": "Object"
                }
            ],
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 102,
            "description": "Disconnects release Gain Node from an AudioNode or AudioParam.",
            "itemtype": "method",
            "name": "disconnect",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "output",
                    "description": "Takes in an AudioNode or AudioParam.",
                    "type": "Object"
                }
            ],
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 113,
            "description": "Start audio at this current time.",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "currTime",
                    "description": "Time in (seconds) that audio will start.",
                    "type": "Number"
                }
            ],
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 125,
            "description": "Stop audio at this current time.",
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "currTime",
                    "description": "Time in (seconds) that audio will stop.",
                    "type": "Number"
                }
            ],
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 138,
            "description": "Linearly ramp down the gain of the audio in time (seconds) to 0.",
            "itemtype": "method",
            "name": "release",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "fadeTime",
                    "description": "Amount of time it takes for linear ramp down to happen.",
                    "type": "Number"
                }
            ],
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/BaseSound.js",
            "line": 154,
            "description": "Play sound after connecting the (release) Gain Node to the destination node.",
            "itemtype": "method",
            "name": "play",
            "return": {
                "description": "null"
            },
            "class": "BaseSound"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 9,
            "itemtype": "property",
            "name": "defaultValue",
            "default": "0",
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 14,
            "itemtype": "property",
            "name": "maxValue",
            "default": "0",
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 19,
            "itemtype": "property",
            "name": "minValue",
            "default": "0",
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 24,
            "itemtype": "property",
            "name": "name",
            "default": "\"\"",
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 29,
            "itemtype": "property",
            "name": "value",
            "default": "0",
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 37,
            "description": "Schedules a parameter value change at the given time.",
            "itemtype": "method",
            "name": "setValueAtTime",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "value",
                    "description": "The value parameter is the value the parameter will change to at the given time.",
                    "type": "Number"
                },
                {
                    "name": "startTime",
                    "description": "The startTime parameter is the time in the same time coordinate system as AudioContext.currentTime.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 52,
            "description": "Start exponentially approaching the target value at the given time with a rate having the given time constant.\n\nDuring the time interval: T0 <= t < T1, where T0 is the startTime parameter and T1 represents the time of the event following this event (or infinity if there are no following events):\n       v(t) = V1 + (V0 - V1) * exp(-(t - T0) / timeConstant)",
            "itemtype": "method",
            "name": "setTargetAtTime",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "target",
                    "description": "The target parameter is the value the parameter will start changing to at the given time.",
                    "type": "Number"
                },
                {
                    "name": "startTime",
                    "description": "The startTime parameter is the time in the same time coordinate system as AudioContext.currentTime.",
                    "type": "Number"
                },
                {
                    "name": "timeConstant",
                    "description": "The timeConstant parameter is the time-constant value of first-order filter (exponential) approach to the target value. The larger this value is, the slower the transition will be.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 68,
            "description": "Sets an array of arbitrary parameter values starting at the given time for the given duration. The number of values will be scaled to fit into the desired duration.\n\nDuring the time interval: startTime <= t < startTime + duration, values will be calculated:\n\n      v(t) = values[N * (t - startTime) / duration], where N is the length of the values array.",
            "itemtype": "method",
            "name": "setTargetValueAtTime",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "values",
                    "description": "The values parameter is a Float32Array representing a parameter value curve. These values will apply starting at the given time and lasting for the given duration.",
                    "type": "Float32Array"
                },
                {
                    "name": "startTime",
                    "description": "The startTime parameter is the time in the same time coordinate system as AudioContext.currentTime.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "The duration parameter is the amount of time in seconds (after the time parameter) where values will be calculated according to the values parameter.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 85,
            "description": "Sets an array of arbitrary parameter values starting at the given time for the given duration. The number of values will be scaled to fit into the desired duration.\n\nDuring the time interval: startTime <= t < startTime + duration, values will be calculated:\n\n      v(t) = values[N * (t - startTime) / duration], where N is the length of the values array.",
            "itemtype": "method",
            "name": "setValueCurveAtTime",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "values",
                    "description": "The values parameter is a Float32Array representing a parameter value curve. These values will apply starting at the given time and lasting for the given duration.",
                    "type": "Float32Array"
                },
                {
                    "name": "startTime",
                    "description": "The startTime parameter is the time in the same time coordinate system as AudioContext.currentTime.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "The duration parameter is the amount of time in seconds (after the time parameter) where values will be calculated according to the values parameter.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 102,
            "description": "Schedules an exponential continuous change in parameter value from the previous scheduled parameter value to the given value.",
            "itemtype": "method",
            "name": "exponentialRampToValueAtTime",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "value",
                    "description": "The value parameter is the value the parameter will exponentially ramp to at the given time.",
                    "type": "Float32Array"
                },
                {
                    "name": "endTime",
                    "description": "The endTime parameter is the time in the same time coordinate system as AudioContext.currentTime.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 114,
            "description": "Schedules a linear continuous change in parameter value from the previous scheduled parameter value to the given value.",
            "itemtype": "method",
            "name": "linearRampToValueAtTime",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "value",
                    "description": "The value parameter is the value the parameter will exponentially ramp to at the given time.",
                    "type": "Float32Array"
                },
                {
                    "name": "endTime",
                    "description": "The endTime parameter is the time in the same time coordinate system as AudioContext.currentTime.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        },
        {
            "file": "src/lib/core/SPAudioParam.js",
            "line": 126,
            "description": "Schedules a linear continuous change in parameter value from the previous scheduled parameter value to the given value.",
            "itemtype": "method",
            "name": "cancelScheduledValues",
            "return": {
                "description": "null"
            },
            "params": [
                {
                    "name": "startTime",
                    "description": "The startTime parameter is the starting time at and after which any previously scheduled parameter changes will be cancelled.",
                    "type": "Number"
                }
            ],
            "class": "SPAudioParam"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: constant",
            "line": " src/lib/core/BaseSound.js:53"
        },
        {
            "message": "unknown tag: constant",
            "line": " src/lib/core/BaseSound.js:61"
        }
    ]
}